services:
  db:
    restart: unless-stopped
    image: "postgres:12.3-alpine"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - ./data/postgres_data:/var/lib/postgresql/data/
    networks:
      - rengine_network

  redis:
    image: "redis:alpine"
    hostname: redis
    networks:
      - rengine_network

  celery:
    image: docker.io/talanor/rengine-celery:v0.4
    restart: unless-stopped
    volumes:
      - ./web:/home/rengine/rengine
      - ./scan_results:/home/rengine/scan_results
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
    environment:
      - DEBUG=${DEBUG}
      - RENGINE_HOME=/home/rengine/rengine
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - DOMAIN_NAME=${DOMAIN_NAME}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - MAX_CONCURRENCY=${MAX_CONCURRENCY}
      - MIN_CONCURRENCY=${MIN_CONCURRENCY}
    depends_on:
      - db
      - redis
    networks:
      rengine_network:

  celery-beat:
    image: docker.io/talanor/rengine-celery:v0.4
    restart: unless-stopped
    environment:
      - DEBUG=${DEBUG}
      - RENGINE_HOME=/home/rengine/rengine
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
    depends_on:
      - celery
    volumes:
      - ./web:/home/rengine/rengine
      - ./docker/beat/entrypoint.sh:/entrypoint.sh
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
    networks:
      rengine_network:

  web:
    image: docker.io/talanor/rengine-web:v0.4
    restart: unless-stopped
    environment:
      - DEBUG=${DEBUG}
      - RENGINE_HOME=/home/rengine/app
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - DOMAIN_NAME=${DOMAIN_NAME}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      # THIS IS A MUST FOR CHECKING UPDATE, EVERYTIME A COMMIT IS MERGED INTO
      # MASTER, UPDATE THIS!!! MAJOR.MINOR.PATCH https://semver.org/
      - RENGINE_CURRENT_VERSION='2.0.6'
    volumes:
      - ./web:/home/rengine/app
      - ./docker/web/entrypoint.sh:/entrypoint.sh
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 9000:9000
    depends_on:
      - db
      - celery
      - celery-beat
    networks:
      rengine_network:
        aliases:
          - rengine

  proxy:
    image: nginx:alpine
    restart: unless-stopped
    depends_on:
      - web
      - db
      - redis
    secrets:
      - source: proxy.ca
        target: /etc/nginx/certs/rengine_chain.pem
      - source: proxy.cert
        target: /etc/nginx/certs/rengine.pem
      - source: proxy.key
        target: /etc/nginx/certs/rengine_rsa.key
    volumes:
      - ./config/nginx/rengine.conf:/etc/nginx/conf.d/rengine.conf:ro
      - ./web/staticfiles:/usr/src/app/staticfiles/
      - ./scan_results:/usr/src/scan_results
    networks:
      - rengine_network

  ollama:
    restart: unless-stopped
    image: ollama/ollama
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - rengine_network

networks:
  rengine_network:

volumes:
  tool_config:
  postgres_data:
  gf_patterns:
  nuclei_templates:
  github_repos:
  wordlist:
  scan_results:
  static_volume:
  ollama_data:

secrets:
  proxy.ca:
    file: ./secrets/certs/rengine_chain.pem
  proxy.key:
    file: ./secrets/certs/rengine_rsa.key
  proxy.cert:
    file: ./secrets/certs/rengine.pem
